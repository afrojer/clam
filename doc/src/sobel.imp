// read an image into the 'srcimg' variable
Image srcimg = imgread("someimage.jpg");

// define a luninance channel for this image
// (Red, Green, and Blue channels are implicit from imgread)
Uint8 srcimg:Lum := #[(3*Red + 6*Green + 1*Blue)/10];

// Kernel definitions are ordered i.e. the channels
// are calculated in the order they are defined
Kernel sobel = {
	Uint8 @Gx   := [1 | 1]{ -1  0 +1 | -2  0 +2 | -1  0 +1 };
	Uint8 @Gy   := [1 | 1]{+1 +2 +1 |  0  0  0 | -1 -2 -1 };
	Uint8 G     := #[sqrt(Gx*Gx + Gy*Gy)];
	Angle Theta := #[arctan(Gy/Gx)];
};

// Convolution - resulting image will have the same number
// of channels as the filtering kernel.
Image edges = $(srcimg:Lum) ** $(sobel);

// compose an output image which is a grayscale of
// edge gradient magnitude
Image output = {
	Uint8 Red   = $(edges:G);
	Uint8 Green = $(edges:G);
	Uint8 Blue  = $(edges:G);
};
imgwrite( output, "edges_of_someimage.jpg");
